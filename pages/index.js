import { useEffect, useState } from "react";
import CodeMirror from "@uiw/react-codemirror";
import { javascript } from "@codemirror/lang-javascript";
import { createTheme } from "@uiw/codemirror-themes";
import { EditorView } from "@codemirror/view";

import Head from "next/head";
import Toastr from "../components/Toastr";
import { ToastContainer } from "react-toastify";
import Button from "../components/Button";

import { CODE_EDITOR_THEME } from "../constants/theme";

export default function Home() {
  const [inputString, setInputString] = useState("");
  const [outputString, setOutputString] = useState("");

  const handleFormat = () => {
    try {
      setOutputString(JSON.stringify(JSON.parse(inputString), null, 4));
    } catch (error) {
      Toastr.error("Enter Valid JSON");
    }
  };

  const handleClear = () => {
    setInputString("");
    setOutputString("");
  };

  const handleDownload = () => {
    const element = document.createElement("a");
    const file = new Blob([outputString], {
      type: "text/plain;charset=utf-8",
    });
    element.href = URL.createObjectURL(file);
    element.download = "json.txt";
    document.body.appendChild(element);
    element.click();
  };

  useEffect(() => {
    inputString === "" && setOutputString("");
  }, [inputString]);

  return (
    <div className="h-screen flex-col justify-between bg-zinc-900 p-5">
      <Head>
        <title>JSON Style</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <ToastContainer theme="dark" />
        <p className="text-2xl text-center">JSON STYLE</p>
        <div className="space-y-3 flex-col">
          <div className="flex space-x-3 h-90">
            <CodeMirror
              autoFocus
              height="548px"
              theme="dark"
              value={inputString}
              extensions={[javascript({ jsx: true })]}
              onChange={(e) => setInputString(e)}
              className="w-1/2 mt-7 h-full"
            />
            <CodeMirror
              height="548px"
              theme={createTheme(CODE_EDITOR_THEME)}
              editable={false}
              value={outputString}
              extensions={[javascript({ jsx: true }), EditorView.lineWrapping]}
              className="w-1/2 mt-7 overflow-auto h-full"
            />
          </div>
          <div className="flex bg-zinc-800 space-x-3 px-3 py-3 rounded spacy-x-2">
            <Button label="Format" onClick={handleFormat} />
            <Button label="Clear" onClick={handleClear} />
            <Button label="Download" onClick={handleDownload} />
          </div>
        </div>
        {/* <Footer /> */}
      </main>
    </div>
  );
}
